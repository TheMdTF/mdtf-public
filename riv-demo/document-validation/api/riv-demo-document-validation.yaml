openapi: 3.0.3
info:
  title: The Maryland Test Facility Document Validation Interface - OpenAPI 3.0
  description: >-
    This documents the API requirements for MdTF testing of document validation
    algorithms.  Document validation testing at the MdTF is supported by the
    Department of Homeland Security Science and Technology Directorate (DHS
    S&T).  For more information please visit
    [https://mdtf.org](https://mdtf.org) and
    [https://www.dhs.gov/science-and-technology/BI-TC](https://www.dhs.gov/science-and-technology/BI-TC).
  contact:
    email: info@mdtf.org
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
tags:
  - name: info
    description: Return information about the document validation algorithm
  - name: validate
    description: Return validation decision based on images of an identity document
paths:
  /v1/info:
    get:
      tags:
        - info
      summary: Return information about the document validation algorithm
      description: Return information about the validation algorithm
      operationId: info
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Info'
        '500':
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
  /v1/validate:
    post:
      tags:
        - validate
      summary: Validate an identity document based on images
      description:  >-
        Receive base64 encoded PNG images of the front and back of a document.
        Validation requires that the document is judged to be authentic.
        See [NIST SP 800-63A](https://pages.nist.gov/800-63-3-Implementation-Resources/63A/ial2remote/) Section A.10.2: Identity Validation for recommended best practices.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapturedDocument'
        required: true
      responses:
        '200':
          description: successful validation operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
        '400':
          description: client error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
        '500':
          description: server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationErrorResponse'
components:
  schemas:
    Info:
      type: object
      required:
        - algorithmName
        - algorithmVersion
        - companyName
        - event
        - recommendedCPUs
        - recommendedMem
        - technicalContactEmail
      properties:
        algorithmName:
          description: Algorithm name
          type: string
          example: docvalidate
        algorithmVersion:
          description: Algorithm version identifier
          type: string
          example: 1.0.0
        companyName:
          description: Company name
          type: string
          example: IDSL
        event:
          description: The name of the test event
          type: string
          enum: ["2023 Document Validation Demonstration"]
        recommendedCPUs:
          description: The recommended allocation of CPUs for the deployed docker container
          type: number
          format: int64
          example: 4
        recommendedMem:
          description: >-
            The recommended allocation of memory (MB) for the deployed docker
            container
          type: number
          format: int64
          example: 256
        technicalContactEmail:
          description: email of the technical contact
          type: string
          example: info@mdtf.org

    CapturedDocument:
      description: Object representation of a document. Consists of an image of the front and back
      type: object
      required:
        - documentFront
        - documentBack
      properties:
        documentFront:
          description: Image of front of document; base64 encoded bytes
          type: string
          format: byte
          example: "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVQYV2NgYAAAAAMAAWgmWQ0AAAAASUVORK5CYII="
        documentBack:
          description: Image of back of document; base64 encoded bytes
          type: string
          format: byte
          example: "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVQYV2NgYAAAAAMAAWgmWQ0AAAAASUVORK5CYII="

    ValidationResponse:
      type: object
      required:
        - validityOutcome
      properties:
        validityOutcome:
          description: >-
            Whether the document is determined to be valid (True) or invalid
            (False)
          type: boolean
          example: true
        validityScore:
          description: >-
            A score corresponding to the level of confidence that the document 
            is valid ranging between 0 and 1 (optional)
          type: number
          format: double
          example: 0.8
        validityProperties:
          description: >-
            Key value pairs describing document properties and their
            relationship to the validity decision. There are no strictly defined 
            properties. The inclusion of descriptive properties is encouraged to provide more context. (optional)
          type: array
          items:
            type: object
            properties:
              property:
                type: string
              value:
                type: string
          example:
            - property: informationFormatCorrect
              value: true
            - property: informationCorrect
              value: true
            - property: informationComplete
              value: true
            - property: checkSumsCorrect
              value: true
            - property: mrzCorrect
              value: true
            - property: photoTampered
              value: true
            - property: livenessCheck
              value: 'Passed'
            - property: informationCompleteness
              value: 0.9
            - property: securityFeaturesTampered
              value: None
            - property: dataFieldsTampered
              value: Age changed
    ValidationErrorResponse:
      type: object
      properties:
        error:
          description: descriptive error string
          type: string